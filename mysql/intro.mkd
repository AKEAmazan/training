<meta http-equiv='Content-Type' content='text/html; charset=utf-8' /> 
<style>
pre{background:#F8F8FF; border:black dashed 1px; padding:6px}
</style>

<!-- Use mysql_training == Ubuntu -->
<!-- Use mysql-train == mysql:5.5-->

# Index 


# <a name="Prise_en_main_mysql" /> Prise en main de Mysql

Bon fini la théorie on va mettre la main à la patte maintenant, pour rappel je ne suis pas Administrateur de base de données de formation, donc mon niveau est moindre qu'un professionnel. J'espère que je vous offrirai une base adéquate !


## <a name="install_mysql" /> Installation de Mysql

Bon l'installation , je vous suggère FORTEMENT d'utiliser le système de pacquage de votre distribution afin d'avoir l'ensemble des mises à jours dans le temps. Mysql est très très populaire toutes les distributions l'offre, si Mysql n'est pas disponible regardez pour MariaDB .

* Installation avec __apt__

        $ sudo apt-get install mysql-server

* Installation avec __yum__

        $ sudo yum install mysql-server

La magie du système de pacquage vous a probablement fait l'ensemble de la configuration : 

* Création du l'utilisateur __mysql__ 
* Initialisation de la Base de donnée vierge
* Initialisation du mot de passe **root**

Avant de poursuivre j'aimerai prendre quelques minutes pour voir les opérations réalisés par le système de gestion de pacquage afin de comprendre sous le capot. 

* Création de l'utilisateur __mysql__
    Afin de ne pas avoir le processus __mysql__ serveur en exécution sous l'utilisateur **root** le système à créer un utilisateur probablement nommé __mysql__ . Le numéro sous Ubuntu ne sera pas le même , pas de panic c'est juste un numéro :P

            $ id mysql
            uid=999(mysql) gid=999(mysql) groups=999(mysql)
            $ ps aux | grep mysql
            mysql        1  0.0  0.5 457192 46872 ?        Ssl  20:52   0:00 mysqld

* Initialisation de la base de données vierge 
    Je prend le temps de présenter cette partie, car je fus un jour pris avec ce besoin puis j'ai constaté que j'avais aucune idée comment le pacquage avait effectué l'opération. __Mysql__ fournit un script [mysql\_install\_db](http://dev.mysql.com/doc/refman/5.5/en/mysql-install-db.html) qui permet d'initialiser la base de données . Pour que __Mysql__ démarre le serveur à besoin d'une base de données, bien souvent les scripts d'initialisation (__/etc/init.d/mysql__) intègre la création de cette base de données, mais pas toujours. Voici un exemple :

            $ mysql_install_db --datadir=/tmp/toto --user=mysql --basedir=/usr/local/mysql
            [... OUTPUT COUPÉ ...]
            $ ls -l /tmp/toto
            total 8
            drwx------ 2 mysql root  4096 Oct 11 21:12 mysql
            drwx------ 2 mysql mysql 4096 Oct 11 21:12 performance_schema
            drwx------ 2 mysql root     6 Oct 11 21:12 test
            $ ls -l /tmp/toto/mysql/
            total 1052
            -rw-rw---- 1 mysql mysql      0 Oct 11 21:12 columns_priv.MYD
            -rw-rw---- 1 mysql mysql   4096 Oct 11 21:12 columns_priv.MYI
            -rw-rw---- 1 mysql mysql   8820 Oct 11 21:12 columns_priv.frm
            -rw-rw---- 1 mysql mysql    880 Oct 11 21:12 db.MYD
            -rw-rw---- 1 mysql mysql   5120 Oct 11 21:12 db.MYI
            [... OUTPUT COUPÉ ... ]
            -rw-rw---- 1 mysql mysql    344 Oct 11 21:12 user.MYD
            -rw-rw---- 1 mysql mysql   2048 Oct 11 21:12 user.MYI
            -rw-rw---- 1 mysql mysql  10630 Oct 11 21:12 user.frm

    Nous aurons l'occasion de voir plus en détail le contenu de ces fichiers, rapidement ceci comprends 3 base de données :

    * **mysql** : contenant la configuration de la base de données (actuellement vide).
    * **performance_schema** : Cette base de données permet le stockage d'information de performance de __mysql__
    * **test** : une base de données de test.

    On y revient dans quelques minutes :D 

* Initialisation du mot de passe de l'administrateur
    Bon comme toujours on veut probablement sécurisé cette base de donnée, selon la distribution vous avez soit entré un mot de passe pour l'administrateur lors de l'installation du serveur. Si vous n'avez rien définie alors le mot de passe __root__ est vide :-/. Pour changer la valeur vous pouvez utiliser la commande **mysqladmin** .

            $ mysqladmin -u root -p password  
            Enter password: 
            New password: 
            Confirm new password: 

    Dans le cas présent , ma base de donnée avait déjà un mot de passe assigné je l'ai donc simplement modifier avec un "meilleur" mot de passe :D.


* Démarrage du service et activation pour que le service démarre au __boot__ de la machine

        $ sudo systemctl start mysql.service
        $ sudo systemctl enable mysql.service
        ou
        $ sudo /etc/init.d/mysql start

## <a name="mysql_connection" /> Établir une connexion à mysql 

Cool nous avons un service __Mysql__ actif, nous pouvons valider que le service écoute bien sur le port **3306** celui par défaut :

        $ sudo ss -lntp | grep 3306
        State      Recv-Q Send-Q                      Local Address:Port                 Peer Address:Port 
        LISTEN     0      50                          *:3306                             *:* 

Dans la situation présente mon service __MySQL__ écoute sur l'ensemble des adresses IP , par défaut le service écoute uniquement sur l'Ip 127.0.0.1 donc __localhost__. 

Réalisons une connexion au service avec l'utilisateur __root__ :

        $ mysql -u root -p 
        Enter password: 
        Welcome to the MySQL monitor.  Commands end with ; or \g.
        Your MySQL connection id is 2
        Server version: 5.5.52 MySQL Community Server (GPL)

        Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.

        Oracle is a registered trademark of Oracle Corporation and/or its
        affiliates. Other names may be trademarks of their respective
        owners.

        Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

        mysql>

Nous entrons dans le système de __Mysql__ pour sortir tapé l'instruction : **quit** ou **bye** ou **CTRL+D** .

Description des options:

* **-u** : spécifie le nom de l'utilisateur pour la connexion.
* **-p** : spécifie qu'il y a un mot de passe à entré , qui vous sera demandé sur la ligne de commande. Si vous n'avez pas cette option vous aurez probablement l'erreur suivante ...

            ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: NO)

Clarification du processus de connexion , avec la commande présenté si dessus le système n'utilisera  pas la couche IP pour réaliser la communication, il utilisera le fichier **socket** qui est par défaut : **/tmp/mysql.sock** . 
Si vous désirez établir une connexion à un serveur distant ou utiliser le protocole __TCP__ vous devrez utiliser l'option **-h** voici un exemple:

        $ mysql -u root -h 127.0.0.1 -p 

Bien entendu de nombreuse autre option son disponible , simplement consulter le man page de __mysql__

## <a name="db_manip" /> Manipulation des base de données


### <a name="create_db" /> Visualisation des base de données et création d'une base de donnée 

1. Établir une connexion __mysql__
    Exemple de l'opération :

        $ mysql -u root -p
        [ ... OUTPUT COUPÉ ... ]
        mysql> 

2. Visualisation des base de données présente  avec l'instruction [SHOW DATABASES](http://dev.mysql.com/doc/refman/5.5/en/show-databases.html)
    Exemple d'utilisation (explication juste après):

        mysql> show databases;
        +--------------------+
        | Database           |
        +--------------------+
        | information_schema |
        | mysql              |
        | performance_schema |
        +--------------------+
        3 rows in set (0.00 sec)

     Ou 

        mysql> show databases \G;
        *************************** 1. row ***************************
        Database: information_schema
        *************************** 2. row ***************************
        Database: mysql
        *************************** 3. row ***************************
        Database: performance_schema
        3 rows in set (0.00 sec)

3. Utiliser l'instruction [CREATE DATABASE](http://dev.mysql.com/doc/refman/5.5/en/create-database.html)
    Nous allons faire la création d'un bd avec le nom **ma_super_BD** 

        mysql> create database ma_super_BD;
        Query OK, 1 row affected (0.00 sec)

    Avec [show database](http://dev.mysql.com/doc/refman/5.5/en/show-databases.html) vous pourrez voir la nouvelle base de données.

Bon revenons sur la visualisation des bases de données , lors de la visualisation des base de données nous voyons:

* **[information\_schema](http://dev.mysql.com/doc/refman/5.5/en/information-schema.html)** : cette base de données vient avec toutes les instances de __Mysql__ , elle contient de l'information sur l'ensemble des base de données contenu dans le serveur. L'ensemble des tables qui composent cette base de données est en Lecture Seule , cette base de données est virtuelle, aucun fichier n'est contenu sur le disque. Nous pouvons par exemple connaître les tables qui compose une base de données en consultant cette vue.
* **mysql** : Cette base de données est "réelle" contrairement à l'instance __Information\_Schema__ , il y a des des fichiers contenant les données (nous y reviendrons sous peu) . Nous retrouvons dans cette BD une tables utilisateur contenant l'information des utilisateurs (Nom d'utilisateur / password), le fuseau horaire de la base de donnée. En d'autre mot cette base de données est pour la configuration du serveur , nous verrons aussi plus tard le fichier **mysql.cnf** qui fournit les informations de démarrage du service.
* **performance_schema** : 
* et même peut-être **test** :  Selon votre distribution certain pacquage crée une base de données **test** où tous le monde peut écrire dedans, bien entendu lors de la sécurisation d'une base de donnée , ceci est supprimé assez vite.
 
### <a name="use_db" /> Sélection d'une base de données et visualisation des tables

Nous sommes en mesure de visualiser les base de données disponible maintenant comment entrer dans cette dernière et visualiser les tables.

Pour passer d'une base de données à l'autre nous utilisons l'instruction **use** 

        mysql> use mysql;
        Reading table information for completion of table and column names
        You can turn off this feature to get a quicker startup with -A

        Database changed

Nous sommes à présent dans la base de données **mysql** , pour visualiser les tables disponibles nous pouvons utiliser l'instruction **show tables;** :

        mysql> show tables;
        +---------------------------+
        | Tables_in_mysql           |
        +---------------------------+
        | columns_priv              |
        | db                        |
        | event                     |
        | func                      |
        | general_log               |
        | help_category             |
        | help_keyword              |
        | help_relation             |
        | help_topic                |
        | host                      |
        | ndb_binlog_index          |
        | plugin                    |
        | proc                      |
        | procs_priv                |
        | proxies_priv              |
        | servers                   |
        | slow_log                  |
        | tables_priv               |
        | time_zone                 |
        | time_zone_leap_second     |
        | time_zone_name            |
        | time_zone_transition      |
        | time_zone_transition_type |
        | user                      |
        +---------------------------+
        24 rows in set (0.00 sec)

Nous pouvons donc voir l'ensemble des tables qui compose cette BD, pour voir le contenu un simple **select** , par exemple pour visualiser les utilisateurs de la base de données :

        mysql> select * from user;   
        +------+---------+-------------------------------------------+-------------+-------------+-------------+-------------+-------------+-----------+-------------+---------------+--------------+-----------+------------+-----------------+------------+------------+--------------+------------+-----------------------+------------------+--------------+-----------------+------------------+------------------+----------------+---------------------+--------------------+------------------+------------+--------------+------------------------+----------+------------+-------------+--------------+---------------+-------------+-----------------+----------------------+--------+-----------------------+
        | Host | User    | Password                                  | Select_priv | Insert_priv | Update_priv | Delete_priv | Create_priv | Drop_priv | Reload_priv | Shutdown_priv | Process_priv | File_priv | Grant_priv | References_priv | Index_priv | Alter_priv | Show_db_priv | Super_priv | Create_tmp_table_priv | Lock_tables_priv | Execute_priv | Repl_slave_priv | Repl_client_priv | Create_view_priv | Show_view_priv | Create_routine_priv | Alter_routine_priv | Create_user_priv | Event_priv | Trigger_priv | Create_tablespace_priv | ssl_type | ssl_cipher | x509_issuer | x509_subject | max_questions | max_updates | max_connections | max_user_connections | plugin | authentication_string |

        | %    | root    | *F11871124CBA1F636AFD315DD9460315EFE8F965 | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | Y          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      |          |            |             |              |             0 |           0 |               0 |                    0 |        | NULL                  |
        +------+---------+-------------------------------------------+-------------+-------------+-------------+-------------+-------------+-----------+-------------+---------------+--------------+-----------+------------+-----------------+------------+------------+--------------+------------+-----------------------+------------------+--------------+-----------------+------------------+------------------+----------------+---------------------+--------------------+------------------+------------+--------------+------------------------+----------+------------+-------------+--------------+---------------+-------------+-----------------+----------------------+--------+-----------------------+
        1 rows in set (0.00 sec)


__Hummm__ c'est pas très claire comme résultat il y a beaucoup de colonnes :-( , avec l'option **\G** vous aurez une ligne par colonne , très pratique surtout dans la situation comme celle ci. 

        mysql> select * from user \G 
        *************************** 1. row ***************************
        Host: %
        User: root
        Password: *F11871124CBA1F636AFD315DD9460315EFE8F965
        Select_priv: Y
        Insert_priv: Y
        Update_priv: Y
        Delete_priv: Y
        Create_priv: Y
        Drop_priv: Y
        Reload_priv: Y
        Shutdown_priv: Y
        Process_priv: Y
        File_priv: Y
        Grant_priv: Y
        References_priv: Y
        Index_priv: Y
        Alter_priv: Y
        Show_db_priv: Y
        Super_priv: Y
        Create_tmp_table_priv: Y
        Lock_tables_priv: Y
        Execute_priv: Y
        Repl_slave_priv: Y
        Repl_client_priv: Y
        Create_view_priv: Y
        Show_view_priv: Y
        Create_routine_priv: Y
        Alter_routine_priv: Y
        Create_user_priv: Y
        Event_priv: Y
        Trigger_priv: Y
        Create_tablespace_priv: Y
        ssl_type: 
        ssl_cipher: 
        x509_issuer: 
        x509_subject: 
        max_questions: 0
        max_updates: 0
        max_connections: 0
        max_user_connections: 0
        plugin: 
        authentication_string: NULL
        1 rows in set (0.00 sec)


Pas de panique nous reviendrons sous peu sur la gestion des utilisateurs nous allons en faire la création dans la prochaine section.
Bien entendu si nous regardons notre base de données nouvellement créer nous n'aurons pas de tables.

        mysql> use ma_super_BD;
        Database changed
        mysql> show tables;
        Empty set (0.00 sec)

Alimentons tous ça !!! Mais avant tous nous n'allons pas travailler avec l'utilisateur **root** c'est pas bien :P , on va créer un utilisateur qui aura les droit sur notre nouvelle base de données et uniquement sur cette dernière.

## <a name="create_user" /> Création d'un utilisateur 

Là création d'un utilisateur est super important, bien entendu je passe sous silence l'importance d'un bon mot de passe surtout, si vous avez des données sensible, __oupsss__ bon finalement je l'ai dit :P.

Pour la création d'un utilisateur, je vous conseille de créer préalablement la base de donnée ceci permet de réaliser tous de suite l'association utilisateur base de donnée. Nous allons utiliser l'instruction **[Create User](http://dev.mysql.com/doc/refman/5.5/en/create-user.html)** .

Nous allons donc créer l'utilisateur **bob** avec le mot de passe **marley** , bien entendu vous devez être administrateur (__aka__ avoir les droits) de création d'un utilisateur.

        mysql> create user 'bob'@'localhost' IDENTIFIED BY 'marley';
        Query OK, 0 rows affected (0.00 sec)


Donc le détail :

* **'bob'** : définie le nom de l'utilisateur
* **@'localhost'** : définie depuis quelle machine l'utilisateur peut établir la connexion , dans le cas présent **bob** ne peut établir la connexion QUE depuis __localhost__ donc localement sur la machine. AUCUNE connexion depuis l'externe n'est permis !!
* **'marley'** : mot de passe associé à l'utilisateur depuis la machine __localhost__.

L'option de restriction du __host__ peut être un **FQDN** ou une adresse IP , il est aussi possible d'utiliser le caractère : **%** indiquant depuis n'importe où . 

Voici un exemple de création du même utilisateur **bob** pour établir une connexion depuis l'externe de la machine :

        mysql> create user 'bob'@'%' IDENTIFIED BY 'la_super_mot_de_passe_de_ouf_trop_long_a_tape';
        Query OK, 0 rows affected (0.00 sec)

Donc nous avons maintenant 2 utilisateur **bob** :

1. Pour l'utilisation local avec un mot de passe simpliste.
2. Un utilisateur avec un mot de passe plus complexe pour les connexions externe.


Établissons une connexion avec l'utilisateur afin de voir le comportement.

        mysql -u bob -p 
        Enter password:  (mot de passe marley)
        [... OUTPUT COUPÉ ...]

Visualisons les base de données disponible :

        mysql> show databases;
        +--------------------+
        | Database           |
        +--------------------+
        | information_schema |
        +--------------------+
        1 row in set (0.00 sec)


Comme vous pouvez le voir il n'y a pas de base de données auquel **bob** est accès nous ne voyons donc que la base de donnée "virtuelle" __information\_schema__.
Quittons la connexion et essayons maintenant avec l'autre mot de passe l'utilisateur : __'bob'@'%'__ 

        mysql -u bob -p                                                                                                                          
        Enter password:  (mot de passe la_super_mot_de_passe_de_ouf_trop_long_a_tape)
        ERROR 1045 (28000): Access denied for user 'bob'@'localhost' (using password: YES)

Pourquoi ça ne fonctionne pas ? Car nous avons une entré identifiant l'utilisateur **bob** qui est plus précise celle avec **localhost** qui a donc préséance sur cette entré plus général.

Reconnectons nous avec l'utilisateur **root** afin de faire l'association entre l'utilisateur **bob** et la base de donnée **ma_super_BD**.

ICI ICI ICI
### <a name="manage_perms" /> Gestion des permissions (GRANT)

## <a name="define_schema" /> Création d'un schéma

### <a name="type_de_bd" /> Type de BD MyISAM , Innodb

## <a name="view_vars_change_it"/> Visualisation et modification des variables

* max_connexion ...


# <a name="reference_intro"/> Référence introduction

* [Mysql-install-db](http://dev.mysql.com/doc/refman/5.5/en/mysql-install-db.html)
* [Create User](http://dev.mysql.com/doc/refman/5.5/en/create-user.html)

# <a name="configue" /> Configuration de mysql (mysql.cnf +  ~/.my.cnf)

# <a name="performance" /> Configuration de performance

# <a name="crash_recovery" /> Système de recupération et validation de la santé des tables

# <a name="mysql_replication" /> Mise en place d'une replication Mysql



