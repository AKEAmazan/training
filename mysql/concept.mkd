<meta http-equiv='Content-Type' content='text/html; charset=utf-8' /> 
<style>
pre{background:#F8F8FF; border:black dashed 1px; padding:6px}
</style>


# Index 


# <a name="Intro" /> Introduction

MySQL est un serveur de bases de données relationnelles __SQL__ développé dans un souci de performances élevées en lecture, ce qui signifie qu'il est davantage orienté vers le service de données déjà en place que vers celui de mises à jour fréquentes et fortement sécurisées. Il est __multi-thread__ et __multi-utilisateur__.

C'est un logiciel libre, open source, développé sous double licence selon qu'il est distribué avec un produit libre ou avec un produit propriétaire. Dans ce dernier cas, la licence est payante, sinon c'est la licence publique générale GNU (GPL) qui s'applique. Un logiciel qui intègre du code __MySQL__ ou intègre __MySQL__ lors de son installation devra donc être libre ou acquérir une licence payante. Cependant, si la base de données est séparée du logiciel propriétaire qui ne fait qu'utiliser des API tierces (par exemple en C# ou __php__), alors il n'y a pas besoin d'acquérir une licence payante __MySQL__. Ce type de licence double est utilisé par d'autres produits comme le __framework__ de développement de logiciels __Qt__ (pour les versions antérieures à la 4.5).

__MySQL__ fonctionne sur un grand nombre de système d'exploitation :
*  AIX
* IBM i-5
* BSDi
* FreeBSD
* HP-UX
* Linux
* Mac OS X
* NetWare
* NetBSD
* OpenBSD
* OS/2 Warp
* SGI IRIX
* Solaris
* SCO OpenServer
* SCO UnixWare
* Tru64 Unix
* Windows.

__MySQL__ et __MariaDB__ suite du rachat de __MySQL__ par __Sun Microsystems__ et des annonces du rachat de __Sun Microsystems__ par Oracle Corporation, Michael __Widenius__, fondateur de __MySQL__, quitte cette société pour lancer le projet __MariaDB__, dans une démarche visant à remplacer MySQL tout en assurant l’interopérabilité. Le nom vient de la 2e fille de Monty Widenius, Maria (la première s'appelant My).

Mais avant de ce lancé dans __mysql__ c'est quoi une Base de données , faisons connaissance avec ce nouveau venu ...

## <a name="whatIs_A_DB" /> C'est quoi une base de donnée

Une base de données est un « conteneur » stockant des données telles que des chiffres, des dates ou des mots, pouvant être retraités par des moyens informatiques pour produire une information ; par exemple, des chiffres et des noms assemblés et triés pour former un annuaire. Les retraitements sont typiquement une combinaison d'opérations de recherches, de choix, de tri, de regroupement, et de concaténation.

Donc l'objectif d'une base de donnée est d'avoir un lieu de stockage de nos données, structuré de manière à être en mesure de récupérer facilement les données. La majorité des systèmes de base de données de nos jours permette une communication client / serveur afin de permettre à plusieurs applications de communiquer avec cette dernière. 

Les avantages de l'utilisation d'une base de données ou rôles d'une base de données : 

* **Indépendance** : Premièrement en utilisant une base de données pour vos applications, vos données sont dissocié de votre application. Ceci vous offre une indépendance de vos données de votre application. Vous pouvez donc manipuler vos données avec d'autre application sans trop de difficulté car vous avez une interface normalisé pour extraire les données.
* **Accès** : Le système de base de donnée vous permet de gérer les accès au données , principalement l'accès concurrent.
* **Cohérence** : Selon le système de base de donnée choisie , le système réalisera des validations afin de conserver vos données cohérente.
* **Sécurité** : Il est possible de géré l'accès aux utilisateurs afin de leur permettre uniquement la modification de certain table , ou de permettre la lecture seule.
* **Administration** : Le système de sauvegarde, voir de réplication peut être mis en place peu importe les applications

ICI ICI ICI ICI

### <a name="Topologie" /> Topologie 

Il existe plusieurs **topologie** de base de données :

* **Relationel** : De nos jours cette topologie est la plus répandu, quand vous dites base de donnée généralement les personnes ce représente une BD relationnel. Selon ce modèle, les données sont placées dans des tables avec lignes et colonnes et n'importe quelle donnée contenue dans la base de données peut être retrouvée à l'aide du nom de la table, du nom de la colonne et de la clé primaire. Le modèle relationnel est destiné à assurer l'indépendance des données et à offrir les moyens de contrôler la cohérence et d'éviter la redondance. Il permet de manipuler les données comme des ensembles en effectuant des opérations de la théorie des ensembles. Les règles de cohérence qui s'appliquent aux bases de données relationnelles sont l'absence de redondance ou de nul des clés primaires, et l'intégrité référentielle.
    ![483px-Relational_Model.svg.png](./imgs/483px-Relational_Model.svg.png)
* **Hiérarchique** : Une base de données hiérarchique est une base de données dont le système de gestion lie les enregistrements dans une structure arborescente où chaque enregistrement n'a qu'un seul possesseur. Elle a été utilisée dans les premiers systèmes de gestion de base de données de type mainframe et a été inventé par la NASA. Un Bonne exemple de base de données Hiérarchique nous pouvons penser à l'annuaire **LDAP**.
    ![320px-Hierarchical_Model.svg.png](./imgs/320px-Hierarchical_Model.svg.png)
* **orienté objet et objet-relationnel** : Les SGBD orientés objet sont un sujet de recherche depuis 1980, lorsque sont apparus les premiers langages de programmation orientée objet. Ils sont destinés à offrir les fonctionnalités des SGBD à des langages orientés objet et permettre le stockage persistant des objets. Les objets sont manipulés en utilisant les possibilités natives des langages orientés objet et une interface de programmation permet d'exploiter les fonctionnalités du SGBD. Celui-ci est équipé des mécanismes nécessaires pour permettre l'utilisation des possibilités d'encapsulation, d'héritage et de polymorphisme des langages de programmation orientée objet. Les SGBD objet-relationnel offrent à la fois les possibilités des SGBD orientés objet et ceux des SGBD relationnels. 
    ![640px-Object-Oriented_Model.svg.png](./imgs/640px-Object-Oriented_Model.svg.png)
* **XML ou RDF** : Une base de données XML Native (NXD en anglais) est une base de données qui s'appuie sur le modèle de données fourni par XML. Elle utilise typiquement des langages de requête XML comme XPath ou XQuery. Une extension possible est une base RDF, avec le langage d'interrogation SPARQL. 


## <a name="BDrelationel" /> Base de données relationnel 

## <a name="BDnoSQL" /> Base de données NoSQL

## <a name="Intro_ref" /> Introduction -  Référence

* [https://openclassrooms.com/courses/administrez-vos-bases-de-donnees-avec-mysql/introduction-14](https://openclassrooms.com/courses/administrez-vos-bases-de-donnees-avec-mysql/introduction-14)
* [https://openclassrooms.com/courses/administrez-vos-bases-de-donnees-avec-mysql/les-types-de-donnees](https://openclassrooms.com/courses/administrez-vos-bases-de-donnees-avec-mysql/les-types-de-donnees)
* [https://fr.wikipedia.org/wiki/Base\_de\_donn%C3%A9es](https://fr.wikipedia.org/wiki/Base_de_donn%C3%A9es)
* [https://fr.wikipedia.org/wiki/Syst%C3%A8me\_de\_gestion\_de\_base\_de\_donn%C3%A9es](https://fr.wikipedia.org/wiki/Syst%C3%A8me_de_gestion_de_base_de_donn%C3%A9es)
